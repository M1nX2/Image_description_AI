# app.py
import streamlit as st
from transformers import pipeline
from PIL import Image

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üñºÔ∏è Image Captioning + Chat Bot")

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω—ë–º!")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", type=["jpg", "jpeg", "png"])

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π
@st.cache_resource
def load_caption_model():
    return pipeline("image-to-text", model="Salesforce/blip-image-captioning-base")

@st.cache_resource
def load_chat_model():
    return pipeline("text-generation", model="microsoft/DialoGPT-medium")

caption_model = load_caption_model()
chat_model = load_chat_model()

if uploaded_file:
    # –ü–æ–∫–∞–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image = Image.open(uploaded_file)
    st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_container_width=True)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
    with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è..."):
        caption = caption_model(image)[0]['generated_text']
    st.success("–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
    st.write(caption)

    # –ü—Ä–æ—Å—Ç–∞—è —á–∞—Ç-—Å–µ–∫—Ü–∏—è
    st.markdown("---")
    st.subheader("üí¨ –ß–∞—Ç —Å –±–æ—Ç–æ–º")

    if "chat_history" not in st.session_state:
        st.session_state.chat_history = []

    user_input = st.text_input("–í–∞—à –≤–æ–ø—Ä–æ—Å:")

    if user_input:
        prompt = f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–æ —Ç–∞–∫: {caption}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: {user_input}"
        response = chat_model(prompt, max_length=150, do_sample=True, temperature=0.7)
        bot_reply = response[0]["generated_text"]
        st.session_state.chat_history.append(("–í—ã", user_input))
        st.session_state.chat_history.append(("–ë–æ—Ç", bot_reply))

    for sender, msg in st.session_state.chat_history:
        st.markdown(f"{sender}: {msg}")
else:
    st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")
    


